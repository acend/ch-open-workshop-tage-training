# TODO
# Add Helm install/upgrade
# HouseKeeping, remove old Tags and uninstall releases
name: Build Training and Publish

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Define Tag prefix
        id: tag_prefix
        run: |
          # GITHUB_REF=refs/heads/philipona/test
          # results in ::set-output name=tag_prefix::philipona-test
          # GITHUB_REF=refs/heads/main
          # results in ::set-output name=tag_prefix::latest
          # GITHUB_REF=refs/heads/master # for backwards compatibility
          # results in ::set-output name=tag_prefix::latest
          #GITHUB_REF=refs/pull/11/merge
          # results in ::set-output name=tag_prefix::pr-11

          ghreturnprefix="::set-output name=tag_prefix::"

          if [[ ${GITHUB_REF} == *"refs/heads"* ]]; then
            branch=$(echo ${GITHUB_REF#refs/heads/} | sed -E 's/[^a-zA-Z0-9._-]+/-/g')
            if [[ $branch == "main" || $branch == "master" ]]; then
              echo $ghreturnprefix"latest"
            else
              echo $ghreturnprefix$branch
            fi
          elif [[ ${GITHUB_REF} == *"refs/pull"* ]]; then
            echo $ghreturnprefix"pr-$(echo ${GITHUB_REF#refs/pull/} | sed -E 's/\/merge$//g' | sed -E 's/[^a-zA-Z0-9._-]+/-/g')"
          elif [[ ${GITHUB_REF} == *"refs/tags"* ]]; then
            echo $ghreturnprefix$(echo ${GITHUB_REF#refs/tags/} | sed -E 's/[^a-zA-Z0-9._-]+/-/g')
          fi
      - 
        name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - 
        name: Lint Markdown
        uses: nosborn/github-action-markdown-cli@v1.1.1
        with:
          files: "content *.md"
          config_file: ".markdownlint.json"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Quay.io Container Registry
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}
      - 
        name: Build Latest Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          # changeme to true and set the correct tags
          tags: |
            quay.io/acend/hugo-training-template:${{ steps.tag_prefix.outputs.tag_prefix }}
      - 
        name: 'Deploy'
        uses: 'deliverybot/helm@v1'
        with:
          release: '${{ steps.tag_prefix.outputs.tag_prefix }}'
          namespace: 'acend-hugo-training-template-test'
          chart: 'helm-chart'
          token: '${{ github.token }}'
          helm: 'helm3'
          values: |
            image.tag="${{ steps.tag_prefix.outputs.tag_prefix }}"
            ingress.hosts[0].host=hugo-training-template-${{ steps.tag_prefix.outputs.tag_prefix }}.training.acend.ch
            ingress.tls[0].hosts[0]=hugo-training-template-${{ steps.tag_prefix.outputs.tag_prefix }}.training.acend.ch
            ingress.tls[0].secretName=hugo-training-template-${{ steps.tag_prefix.outputs.tag_prefix }}-training-acend-ch
            ingress.hosts[0].paths[0]=/
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG_TEST }}'